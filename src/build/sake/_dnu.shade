@{/*

dnu
    Executes a dnu package manager command.

dnu_args=''
    Required. The arguments to pass to the dnu command line tool.

dnu_options='' (Environment Variable: DNU_OPTIONS)
    Additional options to include when executuing the dnu command line tool.

dnu_path='$(working_path)'
    The path in which to execute the dnu command line tool.

base_path='$(CurrentDirectory)'
    The base path in which to execute the dnu command line tool.

working_path='$(base_path)'
    The working path in which to execute the dnu command line tool.

*/}

use namespace = 'System'
use namespace = 'System.IO'

use import = 'Condo.Build'

default base_path           = '${ Directory.GetCurrentDirectory() }'
default working_path        = '${ base_path }'
default dnu_path            = '${ working_path }'

default dnu_args            = ''
default dnu_options         = '${ Build.Get("DNU_OPTIONS") }'

default Quiet='${ false }'

@{
    if (string.IsNullOrEmpty(dnu_args))
    {
        throw new ArgumentException("dnu: arguments must be specified when executing the dnu command line tool.", "dnu_args");
    }

    if (Quiet)
    {
        dnu_args += " --quiet";
    }

    dnu_args = dnu_args.Trim();

    if (!string.IsNullOrEmpty(dnu_options))
    {
        dnu_options = dnu_options.Trim();
    }
}

log verbose='-dnu'
log verbose='--arguments    : ${ dnu_args }'
log verbose='--options      : ${ dnu_options }' if='!string.IsNullOrEmpty(dnu_options)'
log verbose='--path         : ${ dnu_path }'

exec exec_cmd='dnu' exec_args='${ dnu_args } ${ dnu_options }' exec_path='${ dnu_path }'