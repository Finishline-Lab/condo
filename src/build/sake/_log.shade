@{/*

log
    Logs a message to the console or pipeline.

info=''
    The informational message to log.

warn=''
    The warning message to log.

verbose=''
    The verbose message to log.

*/}

use namespace = 'System'

default verbose = ''
default info = ''
default warn = ''
default log_name = ''
default log_value = ''
default log_line = ''
default log_header = ''

global arg_format = '- {0,-20}: {1}' type='string'

@{
    if (!string.IsNullOrEmpty(log_header))
    {
        Log.Info(string.Concat("   ", log_header.ToUpper()));
    }

    if (!string.IsNullOrEmpty(log_name) && log_value != null && !string.IsNullOrEmpty(log_value.ToString()))
    {
        Log.Verbose(string.Format(arg_format, log_name, log_value));
    }

    if (!string.IsNullOrEmpty(info))
    {
        Log.Info(info);
    }

    if (!string.IsNullOrEmpty(warn))
    {
        Log.Warn(warn);
    }

    if (!string.IsNullOrEmpty(verbose))
    {
        Log.Verbose(verbose);
    }

    if (!string.IsNullOrEmpty(log_line))
    {
        Log.Verbose(string.Empty.PadLeft(120, log_line[0]));
    }
}