@{/*

bower
    Executes a bower package manager command.

bower_args=''
    Required. The arguments to pass to the bower command line tool.

bower_options='' (Environment Variable: BOWER_OPTIONS)
    Additional options to use when executing the bower command.

bower_path='$(base_path)'
    The path in which to execute bower.

base_path='$(CurrentDirectory)'
    The base path in which to execute bower.

working_path='$(base_path)'
    The working path in which to execute bower.

bower_wait='true'
    A value indicating whether or not to wait for exit.

bower_quiet='$(Build.Log.Quiet)'
    A value indicating whether or not to avoid printing output.

*/}

use namespace = 'System'
use namespace = 'System.IO'

use import = 'Condo.Build'

default base_path           = '${ Directory.GetCurrentDirectory() }'
default working_path        = '${ base_path }'

default bower_args          = ''
default bower_options       = '${ Build.Get("BOWER_OPTIONS") }'

default bower_path          = '${ working_path }'
default bower_wait          = '${ true }'
default bower_quiet         = '${ Build.Log.Quiet }'

bower-download once='bower-download'

log log_header='bower'
log log_line='-'

var bower_cmd               = '${ Build.GetPath("bower") }'

@{
    if (string.IsNullOrEmpty(bower_args))
    {
        throw new ArgumentException("bower: cannot execute without arguments.", "bower_args");
    }

    // trim the arguments
    bower_args = bower_args.Trim();
    bower_options = bower_options.Trim();
}

log log_name='cli'          log_value='${ bower_cmd.Path }'
log log_name='arguments'    log_value='${ bower_args }'
log log_name='options'      log_value='${ bower_options }'
log log_name='path'         log_value='${ bower_path }'
log log_name='wait'         log_value='${ bower_wait }'
log log_name='quiet'        log_value='${ bower_quiet }'
log log_line='-'

- bower_options = (bower_options + " --config.interactive=false").Trim();

exec exec_cmd='${ bower_cmd.Path }' exec_args='${ bower_args } ${ bower_options }' exec_path='${ bower_path }' exec_quiet='${ bower_quiet }' if='bower_cmd.Global'
node node_args='"${ bower_cmd.Path }" ${ bower_args } ${ bower_options }' node_path='${ bower_path }' node_wait='${ bower_wait }' node_quiet='${ bower_quiet }' if='!bower_cmd.Global'